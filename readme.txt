# Repository with Scripts to Manage ROM Labels for Successful Scraping and Adding Thumbnails in Retroarch

These scripts were developed on a Linux desktop but should be useful on other operating systems as well.

The pipeline works as follows:

- **match_names.py** takes a ROM directory and a thumbnails directory, creating a .csv file that matches ROMs to thumbnails with high accuracy, using fuzzy matching.
- Ideally, you should have thumbnails downloaded from [https://thumbnails.libretro.com/](https://thumbnails.libretro.com/). You can batch download thumbnails using a command like:
  ```
  wget -r -np -nd -A jpg,png -P ./fbneo_thumbnails https://thumbnails.libretro.com/FBNeo%20-%20Arcade%20Games/Named_Boxarts/
  ```
- **rename_lpl.py** takes a .csv generated by **match_names.py** and a .lpl playlist file as arguments. It will replace the ROM labels with the correct names from the Retroarch database (it is assumed that the input is already labeled correctly).
- If you get arcade ROM names from repositories like [https://github.com/yingw/rom-name-cn](https://github.com/yingw/rom-name-cn) (especially for CPS and FBNeo), you can start the pipeline here and skip the name matching step. You’ll just need to adjust the column names in the downloaded .csv file to "filename" and "label".
- **filter_thumbs.py** takes a .csv file with the same format as above and a directory of thumbnails, then creates a new folder with only the thumbnails that match the list in the CSV. This is useful for extracting the necessary thumbnails from a full set.
- **missing_lpl_roms.py** takes a ROM folder and a .lpl playlist file. It generates a .txt file listing the ROMs that weren't included in the playlist. This is helpful when loading a large ROM set where a subset might not have been properly scanned or loaded.
- **to_chd.sh** is a small shell script for batch compressing files with **chdman**. It first unzips the files to folders, then creates a flat directory with all the ROM files, and finally compresses them to .CHD format.
- **WARNING:** **to_chd.sh** will only keep the files that successfully compress to .CHD. It’s recommended to back up your folder before using this script to check which files failed to compress. Usually, failures are caused by incorrect filenames inside the .cue files.

---

This is an early work-in-progress. I will be updating it frequently for the next while. 

I hope it is useful, either for direct use or as inspiration for addressing the lack of fuzzy matching in Retroarch, which often fails when creating playlists for systems like Neo Geo, FBNeo, Hacks folders, and others.

--- 

Let me know if you need further adjustments!